buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven { url "http://repo.spongepowered.org/maven" }
        maven { url "https://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath group: "org.spongepowered", name: "mixingradle", version: "0.7-SNAPSHOT", changing: true
        classpath group: "net.minecraftforge.gradle", name: "ForgeGradle", version: "3.+", changing: true
    }
}

apply plugin: "net.minecraftforge.gradle"
apply plugin: "org.spongepowered.mixin"
apply plugin: "eclipse"
apply plugin: "java"

group = "com.terraforged"
version = "${mc_version}-${mod_version}${getClassifier()}"
sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    jcenter()
    mavenCentral()
    maven { url "https://www.dogforce-games.com/maven/" }
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"
}

mixin {
    add sourceSets.main, "mixin.profiler.refmap.json"
}

minecraft {
    mappings channel: mcp_channel, version: mcp_version
    accessTransformer = file("src/main/resources/META-INF/transformers.cfg")
    runs {
        client {
            workingDirectory project.file("run/client")
            property "forge.logging.markers", "SCAN,REGISTRIES,REGISTRYDUMP"
            property "forge.logging.console.level", "debug"
            jvmArgs "-Xmx8G", "-Xms6G"
            arg "-mixin.config=mixin.profiler.json"
            mods {
                profiler {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file("run/server")
            property "forge.logging.markers", "SCAN,REGISTRIES,REGISTRYDUMP"
            property "forge.logging.console.level", "debug"
            jvmArgs "-Xmx8G", "-Xms6G"
            arg "-mixin.config=mixin.profiler.json"
            mods {
                profiler {
                    source sourceSets.main
                }
            }
        }
    }
}

processResources {
    filesMatching("**/mods.toml") {
        // replaces the version string in the mods.toml
        expand("version": "${mod_version}${getClassifier()}", "mc_version": mc_version)
    }
}

static def getClassifier() {
    if (System.getenv("GIT_TAG_NAME") != null) {
        return ""
    }
    def buildNumber = System.getenv("BUILD_NUMBER")
    if (buildNumber != null) {
        return "-${buildNumber}"
    }
    return ""
}